

📌 @Builder 요약정리
1. 정의
    Lombok 라이브러리에서 제공하는 빌더 패턴 지원 어노테이션
    복잡한 객체 생성을 간단하고 직관적으로 표현할 수 있음

2. 목적
    생성자나 setter 대신 가독성 좋은 방식으로 객체 생성
    매개변수가 많을 때 유용 (순서 실수 방지)
    필요한 필드만 선택적으로 초기화 가능

3. 주요 메서드
    .builder() : 빌더 객체 생성
    .필드명(값) : 해당 필드에 값 설정
    .build() : 최종적으로 객체 생성

4. 사용법 비교
    🔹 일반 생성자 방식
    MemberDto dto = new MemberDto(1, "홍길동", "hong@test.com");

    🔹 빌더 패턴 방식
    MemberDto dto = MemberDto.builder()
            .id(1)
            .name("홍길동")
            .email("hong@test.com")
            .build();


[ @Builder ]
    1. 정의 : 롬복 라이브러리 에서 제공하는 빌더 패턴
    2. 목적 : 복잡한 객체 생성을 직관적으로 한다. 가독성 향상 . 매개변수 많을때 편리
    3. 주 메소드
        .builder() : 빌더 객체 생성 함수
        .필드명( 값 ) : 해당 필드에 값 설정
        .build() : 최종적으로 객체 생성
    4. 사용법
        -> new 생성자명( 값 , 값 );
        -> 클래스명.builder().필드명(값).필드명(값).build();