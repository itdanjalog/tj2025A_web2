2025-10-17
# 1. [SELECT] 여러 기준으로 정렬하기
https://school.programmers.co.kr/learn/courses/30/lessons/59404
-- (1) 테이블명 : ANIMAL_INS , 동물 보호소에 들어온
-- (2) 필드명 : ANIMAL_ID, NAME, DATETIME  모든 동물의 아이디와 이름, 보호 시작일을
-- (3) 정렬 : NAME, DATETIME 이름 순으로 조회 단, 이름이 같은 동물 중에서는 보호를 나중에 시작한 동물을 먼저
-- 날짜 : 최근날짜(큰수) 과거날짜(작은수) 컴퓨터는 하루에 1씩증가 , 내림차순: 최신순
SELECT ANIMAL_ID, NAME, DATETIME
    FROM ANIMAL_INS order by NAME ASC , DATETIME DESC;

# 2. [SELECT] 아픈 동물 찾기
https://school.programmers.co.kr/learn/courses/30/lessons/59036
-- 동물 보호소에 들어온 동물 중 아픈 동물1의 아이디와 이름을 조회하는 SQL 문을 작성해주세요. 이때 결과는 아이디 순으로 조회해주세요.
-- (1) 테이블 : ANIMAL_INS ,  동물 보호소에 들어온
-- (2) 조건 : INTAKE_CONDITION = 'Sick' , where 동물 중 아픈 동물1의
-- (3) 필드명 : ANIMAL_ID,NAME , 아이디와 이름을 조회
-- (4) 정렬 : ANIMAL_ID , 아이디 순
select ANIMAL_ID, NAME from ANIMAL_INS
    where INTAKE_CONDITION = 'Sick'
    order by ANIMAL_ID asc

# 3. [SELECT] 어린 동물 찾기
https://school.programmers.co.kr/learn/courses/30/lessons/59037
select ANIMAL_ID, NAME from ANIMAL_INS
    where INTAKE_CONDITION != 'Aged'
    order by ANIMAL_ID asc

========================================================================================
2025-10-16
1. [SELECT] 동물의 아이디와 이름
https://school.programmers.co.kr/learn/courses/30/lessons/59403
-- 동물 보호소에 들어온 모든 동물의 아이디와 이름을
-- ANIMAL_ID순으로 조회하는 SQL문을 작성해주세요.
-- (1) 조회 : 동물의 아이디와 이름
-- (2) 정렬 : ANIMAL_ID순으로 ( ASC 오름차순 )
SELECT ANIMAL_ID , NAME FROM ANIMAL_INS ORDER BY ANIMAL_ID ASC;

2. [SELECT] 과일로 만든 아이스크림 고르기
https://school.programmers.co.kr/learn/courses/30/lessons/133025
-- FIRST_HALF 테이블
-- 출하 번호, 아이스크림 맛(PK), 상반기 아이스크림 총주문량

-- ICECREAM_INFO 테이블
-- 아이스크림 맛(FK), 아이스크림의 성분 타입

-- 상반기 아이스크림 총주문량이 3,000보다 높으면서
-- 아이스크림의 주 성분이 과일인 아이스크림의 맛을 총주문량이 큰 순서대로 조회

-- (1) SELECT * FROM FIRST_HALF WHERE TOTAL_ORDER >= 3000;
-- (2) SELECT * FROM FIRST_HALF f inner join ICECREAM_INFO i on f.FLAVOR = i.FLAVOR;
-- (3 : 1+2 )
-- SELECT * FROM FIRST_HALF f inner join ICECREAM_INFO i
--     on f.FLAVOR = i.FLAVOR
--     where f.TOTAL_ORDER >= 3000;
-- (4) 주 성분이 과일인 아이스크림의 맛( fruit_based )
-- SELECT * FROM FIRST_HALF f inner join ICECREAM_INFO i
--     on f.FLAVOR = i.FLAVOR
--    where f.TOTAL_ORDER >= 3000 and i.INGREDIENT_TYPE = 'fruit_based';
-- (5) 정렬 : 총주문량이 큰 순서대로 조회
SELECT f.FLAVOR FROM FIRST_HALF f inner join ICECREAM_INFO i
    on f.FLAVOR = i.FLAVOR
    where f.TOTAL_ORDER >= 3000 and i.INGREDIENT_TYPE = 'fruit_based'
    order by f.TOTAL_ORDER desc;

3. [SELECT] 강원도에 위치한 생산공장 목록 출력하기
https://school.programmers.co.kr/learn/courses/30/lessons/131112
-- FOOD_FACTORY
-- 공장 ID, 공장 이름, 주소, 전화번호
-- (1) 공장 ID, 공장 이름, 주소를 조회
-- (2) 공장 ID를 기준으로 오름차순 정렬
-- (3) 강원도에 위치한 , = ( 같다 ) , like ( 포함된 % vs _ )
select FACTORY_ID , FACTORY_NAME , ADDRESS from FOOD_FACTORY
    where ADDRESS like '강원도%'
    order by FACTORY_ID asc;

========================================================================================
2025-10-15
1. [SELECT] 모든 레코드 조회하기
https://school.programmers.co.kr/learn/courses/30/lessons/59034
-- 동물 보호소에 들어온 모든 동물의 정보를 ANIMAL_ID순으로 조회하는 SQL문을 작성해주세요
-- (1) 모든 동물의 정보 : *
-- (2) ANIMAL_ID순으로 : order by asc/desc
SELECT * from ANIMAL_INS order by ANIMAL_ID asc;

2. [SELECT] 인기있는 아이스크림
https://school.programmers.co.kr/learn/courses/30/lessons/133024
-- (1) 조회 : 아이스크림의 맛 FLAVOR
-- (2) 정렬1 : 총주문량을 기준으로 내림차순 TOTAL_ORDER
-- (3) 정렬2 : 출하 번호를 기준으로 오름차순 정렬 SHIPMENT_ID
-- 정렬이 2개 이상일때 ,(쉼표) 구분한다.
SELECT FLAVOR FROM FIRST_HALF
    ORDER BY TOTAL_ORDER DESC ,
    SHIPMENT_ID ASC

3. [SELECT] 역순 정렬하기
https://school.programmers.co.kr/learn/courses/30/lessons/59035
-- (1) 조회 : 동물의 이름 , 보호 시작일
-- (2) 정렬 : ANIMAL_ID 역순
SELECT NAME, DATETIME FROM ANIMAL_INS ORDER BY ANIMAL_ID DESC;

4. [SELECT] 대장균들의 자식의 수 구하기 ( subquery )
https://school.programmers.co.kr/learn/courses/30/lessons/299305
-- 대장균 개체의 ID(ID)와 자식의 수(CHILD_COUNT)를 출력하는 SQL 문을 작성해주세요.
-- 자식이 없다면 자식의 수는 0으로 출력해주세요. 이때 결과는 개체의 ID 에 대해 오름차순 정렬해주세요.
-- (1) 조회 : 대장균 개체의 ID , 자식의 수
-- (2) 정렬 : 개체의 ID , ASC
-- SELECT ID FROM ECOLI_DATA ORDER BY ID ASC;
-- (3) 자식의 수 : COUNT(*)
-- SELECT COUNT(*) FROM ECOLI_DATA; -- 전체 레코드수
-- SELECT COUNT(*) FROM ECOLI_DATA WHERE PARENT_ID == 현재조회중인자식ID
-- (SUBQUERY)
SELECT ED.ID , ( SELECT COUNT(*) FROM ECOLI_DATA WHERE PARENT_ID = ED.ID ) AS CHILD_COUNT
FROM ECOLI_DATA ED
ORDER BY ED.ID ASC;


1. [SELECT] 동물의 아이디와 이름
https://school.programmers.co.kr/learn/courses/30/lessons/59403

1. [SELECT] 과일로 만든 아이스크림 고르기
https://school.programmers.co.kr/learn/courses/30/lessons/133025

1. [SELECT] 강원도에 위치한 생산공장 목록 출력하기
https://school.programmers.co.kr/learn/courses/30/lessons/131112

1. [GROUP BY] 즐겨찾기가 가장 많은 식당 정보 출력하기
https://school.programmers.co.kr/learn/courses/30/lessons/131123




# 5. [SELECT] 여러 기준으로 정렬하기
https://school.programmers.co.kr/learn/courses/30/lessons/59404

# 8. [SELECT] 아픈 동물 찾기
https://school.programmers.co.kr/learn/courses/30/lessons/59036

# 9. [SELECT] 어린 동물 찾기
https://school.programmers.co.kr/learn/courses/30/lessons/59037

# 10. [SELECT] 상위 n개 레코드
https://school.programmers.co.kr/learn/courses/30/lessons/59405

# 11. [SELECT] Python 개발자 찾기
https://school.programmers.co.kr/learn/courses/30/lessons/276013

# 9. [SELECT] 재구매가 일어난 상품과 회원 리스트 구하기 ( SUBQUERY )
https://school.programmers.co.kr/learn/courses/30/lessons/131536

1. [GROUP BY] 즐겨찾기가 가장 많은 식당 정보 출력하기  ( SUBQUERY )
https://school.programmers.co.kr/learn/courses/30/lessons/131123


# 4. [SELECT] 동물의 아이디와 이름
select ANIMAL_ID , NAME from ANIMAL_INS order by ANIMAL_ID ASC;
# 5. [SELECT] 여러 기준으로 정렬하기
select ANIMAL_ID , NAME , DATETIME from ANIMAL_INS order by NAME ASC , DATETIME DESC;
# 6. [SELECT] 과일로 만든 아이스크림 고르기
select f.FLAVOR
    from FIRST_HALF f inner join ICECREAM_INFO i
    on f.FLAVOR = i.FLAVOR
    where f.TOTAL_ORDER >= 3000 and i.INGREDIENT_TYPE = 'fruit_based'
    order by f.TOTAL_ORDER desc;
# 7. [SELECT] 강원도에 위치한 생산공장 목록 출력하기
select FACTORY_ID, FACTORY_NAME, ADDRESS
    from FOOD_FACTORY
    where ADDRESS like '강원도%' order by FACTORY_ID;

# 8. [SELECT] 아픈 동물 찾기
select ANIMAL_ID , NAME from ANIMAL_INS
    where INTAKE_CONDITION = 'Sick'
    order by ANIMAL_ID asc

# 9. [SELECT] 어린 동물 찾기
select ANIMAL_ID , NAME from ANIMAL_INS
    where INTAKE_CONDITION != 'Aged'
    order by ANIMAL_ID asc


# 10. [SELECT] 상위 n개 레코드
select NAME from ANIMAL_INS order by DATETIME asc limit 1;

# 11. [SELECT] Python 개발자 찾기
select ID , EMAIL , FIRST_NAME , LAST_NAME
    from DEVELOPER_INFOS
    where SKILL_1 = 'Python' or SKILL_2 = 'Python' or SKILL_3 = 'Python'
    order by ID ASC;



# ============== (2 일차 SQL 문제) 2024-08-07 =================#
# 1.[ SUM, MAX, MIN ] 가장 비싼 상품 구하기
# 2.[ SUM, MAX, MIN ] 최댓값 구하기
# 3.[ SUM, MAX, MIN ] 가격이 제일 비싼 식품의 정보 출력하기
# 4.[ SUM, MAX, MIN ] 최솟값 구하기
# 5.[ SUM, MAX, MIN ] 동물 수 구하기
# 6.[ SUM, MAX, MIN ] 중복 제거하기
# 7.[ SUM, MAX, MIN ] 조건에 맞는 아이템들의 가격의 총합 구하기
# 8. [SELECT] 조건에 맞는 회원수 구하기
# 9. [SELECT] 잔챙이 잡은 수 구하기
# 10. [SELECT] 특정 형질을 가지는 대장균 찾기
# 11. [GROUP BY]자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
# 12. [GROUP BY]성분으로 구분한 아이스크림 총 주문량
# 13. [GROUP BY]진료과별 총 예약 횟수 출력하기
# 14. [GROUP BY]고양이와 개는 몇 마리 있을까
# 15. [GROUP BY]동명 동물 수 찾기
# 16. [GROUP BY]조건에 맞는 사원 정보 조회하기
# 17. [GROUP BY]물고기 종류 별 잡은 수 구하기
# 18. [JOIN]상품 별 오프라인 매출 구하기