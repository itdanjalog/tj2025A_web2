# .properties 파일의 주석하는 방법

# [1] 스프링 서버 port 설정
server.port = 8080

# [2] JDBC 연동 설정 , DAO 에서 했던 연동 코드 대신에
# 1. 연동할 db서버 의 주소
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# 2. 연동할 db서버 의 계정명
spring.datasource.username=root
# 3. 연동할 db서버 의 패스워드  , 주의할점 앞뒤 띄어쓰기 주의
spring.datasource.password=1234


# [3]
# DEBUG : 디버깅용 상세 로그 (개발 시)
# INFO  : 일반 정보 로그 (시작/완료 등)
# WARN  : 경고, 주의 요망
# ERROR : 예외, 오류 발생
# OFF   : 로그 비활성화

# [1] 로그 파일 저장 경로 및 이름
# logging.file.name=logs/app.log

# [2] 로그 출력 형식 (파일 기준)
# %d{yyyy-MM-dd HH:mm:ss} : 로그가 찍힌 날짜와 시간
# %-5level                : 로그 레벨 (DEBUG, INFO, WARN, ERROR) - 5자리 고정 출력
# %logger{36}             : 로그를 남긴 클래스 이름 (최대 36자까지 표시)
# %msg                    : 로그 메시지 (실제 기록할 내용)
# %n                      : 줄바꿈(new line)
logging.pattern.file=[%d{yyyy-MM-dd HH:mm:ss}] %msg%n
logging.pattern.condole=[%d{yyyy-MM-dd HH:mm:ss}] %-5level %logger{36} - %msg%n


# [3] 로그 레벨 우선순위
# DEBUG < INFO < WARN < ERROR < OFF

# [4] 기본(root) 로그 레벨 설정
# root는 INFO 이상만 출력
logging.level.root=INFO

# [5] 프레임워크 내부 로그 줄이기 (WARN 이상만 출력)
#spring.main.log-startup-info=false
#logging.level.org.springframework.boot.web=warn
#logging.level.org.springframework.boot.web.embedded.tomcat=warn
#logging.level.org.apache.catalina=warn
#logging.level.org.apache.coyote=warn
#logging.level.org.springframework.web=warn

# [6] 사용자 코드 로그 레벨 설정
# 예시: day10은 DEBUG까지 출력 # java 이하 경로 이면서 한글패키지명은 불가능
logging.level.example.day10=DEBUG
logging.level.example.day11.logging=DEBUG

# [7] 로그 파일 회전 설정
# 최대 파일 크기: 10MB, 보존 히스토리: 7개
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=7
# 이렇게 최대 7개의 이전 로그 파일까지 보관합니다.
# 8번째가 생성되면 가장 오래된 .log.1이 삭제되고 뒤로 밀립니다.




# ==========================
# [1] DB Connection (MySQL 예시)
# ==========================

# ==========================
# [2] MyBatis 설정
# ==========================
# Mapper XML 경로 (resources/mybatis/mapper/QueryMapper.xml)
mybatis.mapper-locations=classpath:/mappers/*.xml

# DTO/Entity가 있는 패키지
# mybatis.type-aliases-package=example.day12.query.dto

# DB 컬럼명(sno, student_name) → Java 필드(sno, studentName) 자동 매핑
# mybatis.configuration.map-underscore-to-camel-case=true

# ==========================
# [3] SQL 파일 자동 실행
# ==========================
# schema.sql + data.sql 파일 실행 (항상 실행)
spring.sql.init.mode=always

# schema.sql + data.sql 실행 안 함 (원할 때 주석 해제)
# spring.sql.init.mode=never